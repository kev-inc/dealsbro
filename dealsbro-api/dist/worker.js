!function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports={Router:({base:e="",routes:t=[]}={})=>({__proto__:new Proxy({},{get:(n,s,r)=>(n,...a)=>t.push([s.toUpperCase(),RegExp(`^${(e+n).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`),a])&&r}),routes:t,async handle(e,...n){let s,r,a=new URL(e.url);for(var[o,i,l]of(e.query=Object.fromEntries(a.searchParams),t))if((o===e.method||"ALL"===o)&&(r=a.pathname.match(i)))for(var d of(e.params=r.groups,l))if(void 0!==(s=await d(e.proxy||e,...n)))return s}})}},function(e,t,n){"use strict";n.r(t);var s=n(0);const r={"Access-Control-Allow-Origin":"*","Content-type":"application/json"},a=async()=>{const e=await DEALSBRO.get("deals");return JSON.parse(e)},o=async e=>DEALSBRO.put("deals",JSON.stringify(e)),i={"Access-Control-Allow-Origin":"*","Content-type":"application/json"},l=async()=>{const e=await DEALSBRO.get("organisations");return JSON.parse(e)},d=async e=>DEALSBRO.put("organisations",JSON.stringify(e)),u=async e=>await fetch(`https://geocode.xyz/${e}?region=SG&json=1`).then(e=>e.json()),c={"Access-Control-Allow-Origin":"*","Content-type":"application/json"},p=async()=>{const e=await DEALSBRO.get("outlets");return JSON.parse(e)},f=async e=>DEALSBRO.put("outlets",JSON.stringify(e)),g=Object(s.Router)();g.options("*",e=>{const t={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET,POST,PUT,DELETE,OPTIONS","Access-Control-Max-Age":"86400"};let n=e.headers;if(null!==n.get("Origin")&&null!==n.get("Access-Control-Request-Method")&&null!==n.get("Access-Control-Request-Headers")){let n={...t,"Access-Control-Allow-Headers":e.headers.get("Access-Control-Request-Headers")};return new Response(null,{headers:n})}return new Response(null,{headers:{Allow:"GET,POST,PUT,DELETE,OPTIONS"}})}),g.get("/",()=>new Response("Hello, world! This is the root page of your Worker template.")),g.get("/deals",async e=>{const t=await a();return new Response(JSON.stringify(t,null,2),{headers:r})}),g.post("/deals",async e=>{const t=await a(),n=await e.json();return n.id=crypto.randomUUID(),t.push(n),await o(t),new Response(JSON.stringify(n,null,2),{status:201,headers:r})}),g.get("/deals/:dealId",async e=>{const t=e.params.dealId,n=await a(),s=n.findIndex(e=>e.id===t);return-1==s?new Response(JSON.stringify({error:"dealId not found"},null,2),{status:404,headers:r}):new Response(JSON.stringify(n[s],null,2),{headers:r})}),g.put("/deals/:dealId",async e=>{const t=e.params.dealId,n=await e.json(),s=await a(),i=s.findIndex(e=>e.id===t);return-1==i?new Response(JSON.stringify({error:"dealId not found"},null,2),{status:404,headers:r}):(n.id=t,s[i]=n,await o(s),new Response(JSON.stringify(n,null,2),{headers:r}))}),g.delete("/deals/:dealId",async e=>{const t=e.params.dealId,n=await a(),s=n.findIndex(e=>e.id===t);return-1==s?new Response(JSON.stringify({error:"dealId not found"},null,2),{status:404,headers:r}):(n.splice(s,1),await o(n),new Response(null,{status:204,headers:r}))}),g.get("/organisations",async e=>{const t=await l();return new Response(JSON.stringify(t,null,2),{headers:i})}),g.post("/organisations",async e=>{const t=await l(),n=await e.json();return n.id=crypto.randomUUID(),t.push(n),await d(t),new Response(JSON.stringify(n,null,2),{status:201,headers:i})}),g.get("/organisations/:orgId",async e=>{const t=e.params.orgId,n=await l(),s=n.findIndex(e=>e.id===t);return-1==s?new Response(JSON.stringify({error:"orgId not found"},null,2),{status:404,headers:i}):new Response(JSON.stringify(n[s],null,2),{headers:i})}),g.put("/organisations/:orgId",async e=>{const t=e.params.orgId,n=await e.json(),s=await l(),r=s.findIndex(e=>e.id===t);return-1==r?new Response(JSON.stringify({error:"orgId not found"},null,2),{status:404,headers:i}):(n.id=t,s[r]=n,await d(s),new Response(JSON.stringify(n,null,2),{headers:i}))}),g.delete("/organisations/:orgId",async e=>{const t=e.params.orgId,n=await l(),s=n.findIndex(e=>e.id===t);return-1==s?new Response(JSON.stringify({error:"orgId not found"},null,2),{status:404,headers:i}):(n.splice(s,1),await d(n),new Response(null,{status:204,headers:i}))}),g.get("/outlets",async e=>{const t=await p();return new Response(JSON.stringify(t,null,2),{headers:c})}),g.post("/outlets",async e=>{const t=await p(),n=await e.json();n.id=crypto.randomUUID();const s=await u(n.postalCode);return n.longitude=s.longt,n.latitude=s.latt,t.push(n),await f(t),new Response(JSON.stringify(n,null,2),{status:201,headers:c})}),g.get("/outlets/:outletId",async e=>{const t=e.params.outletId,n=await p(),s=n.findIndex(e=>e.id===t);return-1==s?new Response(JSON.stringify({error:"outletId not found"},null,2),{status:404,headers:c}):new Response(JSON.stringify(n[s],null,2),{headers:c})}),g.put("/outlets/:outletId",async e=>{const t=e.params.outletId,n=await e.json(),s=await p(),r=s.findIndex(e=>e.id===t);if(-1==r)return new Response(JSON.stringify({error:"outletId not found"},null,2),{status:404,headers:c});n.id=t;const a=await u(toAdd.postalCode);return n.longitude=a.longt,n.latitude=a.latt,s[r]=n,await f(s),new Response(JSON.stringify(n,null,2),{headers:c})}),g.delete("/outlets/:outletId",async e=>{const t=e.params.outletId,n=await p(),s=n.findIndex(e=>e.id===t);return-1==s?new Response(JSON.stringify({error:"outletId not found"},null,2),{status:404,headers:c}):(n.splice(s,1),await f(n),new Response(null,{status:204,headers:c}))}),g.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(g.handle(e.request))})}]);