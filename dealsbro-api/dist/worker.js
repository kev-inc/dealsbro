!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports={Router:({base:e="",routes:t=[]}={})=>({__proto__:new Proxy({},{get:(n,r,a)=>(n,...s)=>t.push([r.toUpperCase(),RegExp(`^${(e+n).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`),s])&&a}),routes:t,async handle(e,...n){let r,a,s=new URL(e.url);for(var[o,i,l]of(e.query=Object.fromEntries(s.searchParams),t))if((o===e.method||"ALL"===o)&&(a=s.pathname.match(i)))for(var u of(e.params=a.groups,l))if(void 0!==(r=await u(e.proxy||e,...n)))return r}})}},function(e,t,n){"use strict";n.r(t);var r=n(0);const a={"Access-Control-Allow-Origin":"*","Content-type":"application/json"},s=async()=>{const e=await DEALSBRO.get("deals");return JSON.parse(e)},o=async e=>DEALSBRO.put("deals",JSON.stringify(e)),i=Object(r.Router)();i.get("/",()=>new Response("Hello, world! This is the root page of your Worker template.")),i.get("/deals",async e=>{const t=await s();return new Response(JSON.stringify(t,null,2),{headers:a})}),i.post("/deals",async e=>{const t=await s(),n=await e.json();return n.id=crypto.randomUUID(),t.push(n),await o(t),new Response(JSON.stringify(n,null,2),{status:201,headers:a})}),i.get("/deals/:dealId",async e=>{const t=e.params.dealId,n=await s(),r=n.findIndex(e=>e.id===t);return-1==r?new Response(JSON.stringify({error:"dealId not found"},null,2),{status:404,headers:a}):new Response(JSON.stringify(n[r],null,2),{headers:a})}),i.put("/deals/:dealId",async e=>{const t=e.params.dealId,n=await e.json(),r=await s(),i=r.findIndex(e=>e.id===t);return-1==i?new Response(JSON.stringify({error:"dealId not found"},null,2),{status:404,headers:a}):(n.id=t,r[i]=n,await o(r),new Response(JSON.stringify(n,null,2),{headers:a}))}),i.delete("/deals/:dealId",async e=>{const t=e.params.dealId,n=await s(),r=n.findIndex(e=>e.id===t);if(-1==r)return new Response(JSON.stringify({error:"dealId not found"},null,2),{status:404,headers:a});n.splice(r,1);return await o(n),new Response(null,{status:204,headers:a})}),i.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(i.handle(e.request))})}]);