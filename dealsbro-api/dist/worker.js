!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t){e.exports={Router:({base:e="",routes:t=[]}={})=>({__proto__:new Proxy({},{get:(r,n,o)=>(r,...a)=>t.push([n.toUpperCase(),RegExp(`^${(e+r).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`),a])&&o}),routes:t,async handle(e,...r){let n,o,a=new URL(e.url);for(var[s,u,i]of(e.query=Object.fromEntries(a.searchParams),t))if((s===e.method||"ALL"===s)&&(o=a.pathname.match(u)))for(var l of(e.params=o.groups,i))if(void 0!==(n=await l(e.proxy||e,...r)))return n}})}},function(e,t,r){"use strict";r.r(t);var n=r(0);const o={"Access-Control-Allow-Origin":"*","Content-type":"application/json"},a=async()=>{const e=await DEALSBRO.get("deals");return JSON.parse(e)},s=Object(n.Router)();s.get("/",()=>new Response("Hello, world! This is the root page of your Worker template.")),s.get("/deals",async e=>{const t=await a();return new Response(JSON.stringify(JSON.parse(t),null,2),{headers:o})}),s.post("/deals",async e=>{const t=await a(),r=await e.json();return r.id=crypto.randomUUID(),t.push(r),await(async e=>DEALSBRO.put("deals",JSON.stringify(e)))(t),new Response(JSON.stringify(r,null,2),{headers:o})}),s.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(s.handle(e.request))})}]);